<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="http://modwiki.net/w/skins/common/feed.css"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>modwiki - Recent changes [en]</title>
		<link>http://modwiki.net/wiki/Special:Recentchanges</link>
		<description>Track the most recent changes to the wiki on this page.</description>
		<language>en</language>
		<generator>MediaWiki 1.6.8</generator>
		<lastBuildDate>Tue, 11 Sep 2007 00:37:45 GMT</lastBuildDate>
		<item>
			<title>Optimising maps</title>
			<link>http://modwiki.net/wiki/Optimising_maps</link>
			<description>&lt;p&gt;/* Shadows */&lt;/p&gt;

			&lt;table border='0' width='98%' cellpadding='0' cellspacing='4' style=&quot;background-color: white;&quot;&gt;
			&lt;tr&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Revision as of 15:34, 10 September 2007&lt;/td&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Current revision&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;The process of '''map optimisation''' ensures that a given map will play as fast and smoothly as possible on a wide range of hardware. Optimisation techniques are used both throughout the map design process and as a final stage prior to release. A map that is not optimised may perform slowly, cause unwanted visual artifacts, or even crash the game (or PC) in some extreme circumstances.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;==Useful Cvars==&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;To test a [[mapping|map]] and gauge the performance there are several [[Console|CVars]] that can be set or toggled to give you visual information about you map. You can type the [[bind (console command)|bind]] console command at the console or set it in your &amp;quot;[[CFG (file format)|autoexec.cfg]]&amp;quot; file to make it a semi-permanent feature. For all CVars with multiple settings (instead of just on/off) you can use the [[toggle (console command)|toggle]] console command, for instance:&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;To test a [[mapping|map]] and gauge the performance there are several [[Console|CVars]] that can be set or toggled to give you visual information about you map. You can type the [[bind (console command)|bind]] console command at the console or set it in your &amp;quot;[[CFG (file format)|autoexec.cfg]]&amp;quot; file to make it a semi-permanent feature. For all CVars with multiple settings (instead of just on/off) you can use the [[toggle (console command)|toggle]] console command, for instance:&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 18:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 21:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Consider which lights need to cast shadows: ambient or &amp;quot;fill-in&amp;quot; lights almost never need to be shadowcasters. Large, level-encompassing shadowcasting &amp;quot;moonlights&amp;quot; are particularly bad, and should be avoided if at all possible.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Consider which lights need to cast shadows: ambient or &amp;quot;fill-in&amp;quot; lights almost never need to be shadowcasters. Large, level-encompassing shadowcasting &amp;quot;moonlights&amp;quot; are particularly bad, and should be avoided if at all possible.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;# Turn off shadows for individual models by using setting the &amp;quot;noshadows&amp;quot; key to &amp;quot;1&amp;quot;. Although objects cast shadows by default, in many mapping situations there is no significant visual problem with turning them off.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;# Turn off shadows for individual models by using setting the &amp;quot;noshadows&amp;quot; key to &amp;quot;1&amp;quot;. Although objects cast shadows by default, in many mapping situations there is no significant visual problem with turning them off&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;. Level geometry constructed with brushes or patches can have shadows turned off by converting the structure into a '''func_static''' and setting the option as for a model&lt;/span&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Make liberal use of the '''[[r_showShadows (cvar)|r_showShadows]]''' and '''[[r_showShadowCount (cvar)|r_showShadowCount]]''' CVARs during playtesting. '''r_showShadowCount''' colour-codes surfaces in much the same way as '''r_showLightCount''' -- if the screen turns white, there are far too many shadows in view.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Make liberal use of the '''[[r_showShadows (cvar)|r_showShadows]]''' and '''[[r_showShadowCount (cvar)|r_showShadowCount]]''' CVARs during playtesting. '''r_showShadowCount''' colour-codes surfaces in much the same way as '''r_showLightCount''' -- if the screen turns white, there are far too many shadows in view.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# When designing a complex model, consider setting the model's main texture to non-shadowcasting (with the '''noShadow''' material keyword) and adding a separate, simpler &amp;quot;shadow mesh&amp;quot; to the model textured with &amp;quot;textures/common/shadow&amp;quot; or a similar shadowcasting texture. This means that the geometry used to calculate shadows is much simpler than the rendered visual model, which can improve performance without severely impacting the appearance.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# When designing a complex model, consider setting the model's main texture to non-shadowcasting (with the '''noShadow''' material keyword) and adding a separate, simpler &amp;quot;shadow mesh&amp;quot; to the model textured with &amp;quot;textures/common/shadow&amp;quot; or a similar shadowcasting texture. This means that the geometry used to calculate shadows is much simpler than the rendered visual model, which can improve performance without severely impacting the appearance.&lt;/td&gt;&lt;/tr&gt;

			&lt;/table&gt;
		</description>
			<pubDate>Mon, 10 Sep 2007 15:34:57 GMT</pubDate>			<dc:creator>OrbWeaver</dc:creator>			<comments>http://modwiki.net/wiki/Talk:Optimising_maps</comments>		</item>
		<item>
			<title>User:OrbWeaver</title>
			<link>http://modwiki.net/wiki/User:OrbWeaver</link>
			<description>&lt;p&gt;&lt;/p&gt;

			&lt;table border='0' width='98%' cellpadding='0' cellspacing='4' style=&quot;background-color: white;&quot;&gt;
			&lt;tr&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Revision as of 10:34, 10 September 2007&lt;/td&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Current revision&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;#REDIRECT &lt;/span&gt;[&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[User talk&lt;/span&gt;:&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;OrbWeaver&lt;/span&gt;]]&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;[&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;http&lt;/span&gt;:&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;//www.thedarkmod.com Dark Mod&lt;/span&gt;] &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;team member and [http://darkradiant.sourceforge.net DarkRadiant&lt;/span&gt;] &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;project lead.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&amp;#160;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;

			&lt;/table&gt;
		</description>
			<pubDate>Mon, 10 Sep 2007 10:34:05 GMT</pubDate>			<dc:creator>OrbWeaver</dc:creator>			<comments>http://modwiki.net/wiki/User_talk:OrbWeaver</comments>		</item>
		<item>
			<title>Models vs brushes</title>
			<link>http://modwiki.net/wiki/Models_vs_brushes</link>
			<description>&lt;p&gt;/* Culling of models */  - link to [[visportal]]&lt;/p&gt;

			&lt;table border='0' width='98%' cellpadding='0' cellspacing='4' style=&quot;background-color: white;&quot;&gt;
			&lt;tr&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Revision as of 09:48, 10 September 2007&lt;/td&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Current revision&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[Image:bsp_vs_models_1.jpg|thumb|Visibility culling]]&lt;/span&gt;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;Unlike previous games, where &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[Modelling|&lt;/span&gt;models&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;]] &lt;/span&gt;and level geometry had distinct and non-overlapping functions, the unified lighting model of [[Id Tech 4|id Tech 4]] gives &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[Mapping|&lt;/span&gt;mappers&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;]] &lt;/span&gt;an unprecedented level of choice in the techniques used to create geometry. Some mappers build almost everything in a 3D application, and use the level editors only to assemble pre-built models, whereas others prefer to create complex structures out of brushes and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[patch]]es &lt;/span&gt;avoiding 3D applications entirely.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&amp;#160;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;Unlike previous games, where models and level geometry had distinct and non-overlapping functions, the unified lighting model of [[Id Tech 4|id Tech 4]] gives mappers an unprecedented level of choice in the techniques used to create geometry. Some mappers build almost everything in a 3D application, and use the level editors only to assemble pre-built models, whereas others prefer to create complex structures out of brushes and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;patches &lt;/span&gt;avoiding 3D applications entirely.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;The ideal division between the usage of models and in-editor geometry is a source of perpetual debate amongst mappers.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;The ideal division between the usage of models and in-editor geometry is a source of perpetual debate amongst mappers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 14:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 12:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;* '''Personal preference'''. Ultimately the decision to use models or in-editor construction is affected by the mapper's own preferences and skills with the various tools. 3D applications can be challenging to learn for new users, but experienced modellers may find the level editors to be limiting and prefer to make use of their existing skillset.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;* '''Personal preference'''. Ultimately the decision to use models or in-editor construction is affected by the mapper's own preferences and skills with the various tools. 3D applications can be challenging to learn for new users, but experienced modellers may find the level editors to be limiting and prefer to make use of their existing skillset.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;Another consideration is that models behave differently with regards to visibility culling than level geometry. The top part of image on the right shows a corridor with [[r_showPortals (cvar)|r_showPortals]] 1, [[r_useScissor (cvar)|r_useScissor]] 0 and [[r_showTris (cvar)|r_showTris]] 2. In the red circle area you can see that the portal is green (i.e. open) and that the engine is rendering the alcove on the right. However, the alcove is empty. If you strafe left a bit (the lower part of the image) you can see that two boxes (which are two func_static) show up.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;==Culling of models==&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[Image:bsp_vs_models_1.jpg|thumb|Visibility culling]]&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&amp;#160;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;Another consideration is that models behave differently with regards to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[Visportal|&lt;/span&gt;visibility culling&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;]] &lt;/span&gt;than level geometry. The top part of image on the right shows a corridor with [[r_showPortals (cvar)|r_showPortals]] 1, [[r_useScissor (cvar)|r_useScissor]] 0 and [[r_showTris (cvar)|r_showTris]] 2. In the red circle area you can see that the portal is green (i.e. open) and that the engine is rendering the alcove on the right. However, the alcove is empty. If you strafe left a bit (the lower part of the image) you can see that two boxes (which are two func_static) show up.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;Despite the above, this functionality is a double-edged sword. Although in the above example, models will not show up until they're nearly visible and thus an advantage, other situations arise where the vis portal is closed but models may still be &amp;quot;visible&amp;quot; to the engine because a very small part of them are on the other side of the portal. Since they are models, they are not cut by the visportal and that's why they show in their entirety, because they are being drawn relative to their bounding box limits (the 'box' that contains the object). This can become a problem with big models that span visportals.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;Despite the above, this functionality is a double-edged sword. Although in the above example, models will not show up until they're nearly visible and thus an advantage, other situations arise where the vis portal is closed but models may still be &amp;quot;visible&amp;quot; to the engine because a very small part of them are on the other side of the portal. Since they are models, they are not cut by the visportal and that's why they show in their entirety, because they are being drawn relative to their bounding box limits (the 'box' that contains the object). This can become a problem with big models that span visportals.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;[[Category:Modelling]][[Category:Mapping]]&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;[[Category:Modelling]][[Category:Mapping]]&lt;/td&gt;&lt;/tr&gt;

			&lt;/table&gt;
		</description>
			<pubDate>Mon, 10 Sep 2007 09:48:24 GMT</pubDate>			<dc:creator>OrbWeaver</dc:creator>			<comments>http://modwiki.net/wiki/Talk:Models_vs_brushes</comments>		</item>
		<item>
			<title>Models vs brushes</title>
			<link>http://modwiki.net/wiki/Models_vs_brushes</link>
			<description>&lt;p&gt;id tech-ed&lt;/p&gt;

			&lt;table border='0' width='98%' cellpadding='0' cellspacing='4' style=&quot;background-color: white;&quot;&gt;
			&lt;tr&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Revision as of 21:09, 9 September 2007&lt;/td&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Current revision&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;[[Image:bsp_vs_models_1.jpg|thumb|Visibility culling]]&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;[[Image:bsp_vs_models_1.jpg|thumb|Visibility culling]]&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;Unlike previous games, where models and level geometry had distinct and non-overlapping functions, the unified lighting model of &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;the Doom 3 engine &lt;/span&gt;gives mappers an unprecedented level of choice in the techniques used to create geometry. Some mappers build almost everything in a 3D application, and use the level editors only to assemble pre-built models, whereas others prefer to create complex structures out of brushes and patches avoiding 3D applications entirely.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;Unlike previous games, where models and level geometry had distinct and non-overlapping functions, the unified lighting model of &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[Id Tech 4|id Tech 4]] &lt;/span&gt;gives mappers an unprecedented level of choice in the techniques used to create geometry. Some mappers build almost everything in a 3D application, and use the level editors only to assemble pre-built models, whereas others prefer to create complex structures out of brushes and patches avoiding 3D applications entirely.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;The ideal division between the usage of models and in-editor geometry is a source of perpetual debate amongst mappers.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;The ideal division between the usage of models and in-editor geometry is a source of perpetual debate amongst mappers.&lt;/td&gt;&lt;/tr&gt;

			&lt;/table&gt;
		</description>
			<pubDate>Sun, 09 Sep 2007 21:09:18 GMT</pubDate>			<dc:creator>Kamikazee</dc:creator>			<comments>http://modwiki.net/wiki/Talk:Models_vs_brushes</comments>		</item>
		<item>
			<title>Models vs brushes</title>
			<link>http://modwiki.net/wiki/Models_vs_brushes</link>
			<description>&lt;p&gt;Texturing&lt;/p&gt;

			&lt;table border='0' width='98%' cellpadding='0' cellspacing='4' style=&quot;background-color: white;&quot;&gt;
			&lt;tr&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Revision as of 21:08, 9 September 2007&lt;/td&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Current revision&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;[[Image:bsp_vs_models_1.jpg|thumb|Visibility culling]]&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;[[Image:bsp_vs_models_1.jpg|thumb|Visibility culling]]&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;The [[&lt;/span&gt;Doom 3 engine&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;]] uses &lt;/span&gt;an &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;unified lighting model, which means that everything is rendered &lt;/span&gt;in &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;exactly &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;same way. This requires that [[modelling|models]] and [[mapping|maps]] are well built &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;not waste resources. Map &lt;/span&gt;geometry &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;is automatically optimized during &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;compile process while &lt;/span&gt;models &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;require manual optimization&lt;/span&gt;.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;Unlike previous games, where models and level geometry had distinct and non-overlapping functions, the unified lighting model of the &lt;/span&gt;Doom 3 engine &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;gives mappers &lt;/span&gt;an &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;unprecedented level of choice &lt;/span&gt;in the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;techniques used &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;create &lt;/span&gt;geometry&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;. Some mappers build almost everything in a 3D application, and use &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;level editors only to assemble pre-built &lt;/span&gt;models&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;, whereas others prefer to create complex structures out of brushes and patches avoiding 3D applications entirely&lt;/span&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;Another consideration is that models behave differently with regards to visibility culling than level geometry. &lt;/span&gt;The &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;top part &lt;/span&gt;of &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;image on the right shows a corridor with [[r_showPortals (cvar)|r_showPortals]] 1, [[r_useScissor (cvar)|r_useScissor]] 0 &lt;/span&gt;and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[r_showTris (cvar)|r_showTris]] 2. In the red circle area you can see that the portal &lt;/span&gt;is &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;green (i.e. open) and that the engine is rendering the alcove on the right. However, the alcove is empty. If you strafe left &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;bit (the lower part &lt;/span&gt;of &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;the image) you can see that two boxes (which are two func_static) show up&lt;/span&gt;.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;The &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;ideal division between the usage &lt;/span&gt;of &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;models &lt;/span&gt;and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;in-editor geometry &lt;/span&gt;is a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;source &lt;/span&gt;of &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;perpetual debate amongst mappers&lt;/span&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;Despite the above, this functionality is a double-edged sword. Although in the above example, models will not show up until they're nearly visible and thus an advantage, other situations arise where the vis portal is closed but models may still be &amp;quot;visible&amp;quot; to the engine because a very small part of them are on the other side of the portal. Since they are models, they are not cut by the visportal and that's why they show in their entirety, because they are being drawn relative to their bounding box limits (the 'box' that contains the object). This can become a problem with big models that span visportals.&lt;/span&gt;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;==Considerations==&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;Aside &lt;/span&gt;from the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;above remarks&lt;/span&gt;, the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;deciding factors as to what should &lt;/span&gt;be &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;created with &lt;/span&gt;brushes and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;what should be modeled &lt;/span&gt;is &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;up &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;personal &lt;/span&gt;preference and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;your needs&lt;/span&gt;.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* '''Optimisation'''. Map geometry is automatically optimized during the compilation &lt;/span&gt;from &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;brushes into triangles, while models require manual optimization before they are exported. This may result in an increased workload for &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;modeller&lt;/span&gt;, &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;but also allows more control over &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;triangulation process than that afforded by brush compilation.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* '''Sealing the void'''. Imported models cannot seal the map from the void. This means that if models are used for general terrain and room structure, care must &lt;/span&gt;be &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;taken to position caulk &lt;/span&gt;brushes &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;appropriately to ensure that the map is sealed.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* '''Vertex colour'''. Models can provide vertex colours which are multiplied with the model texture to introduce low-frequency colour variation over the model surface. Brushes &lt;/span&gt;and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;patches do not support vertex colours.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* '''Texturing'''. Various texturing operations may vary in their ease-of-use between 3D applications and the level editors. For example, precisely aligning a hand-painted texture &lt;/span&gt;is &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;far easier on a model (using a UV editing tool), whereas flowing a repeating texture along a curved patch may be more convenient in the editor.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* '''Sizing flexibility'''. Various unsatisfactory hacks notwithstanding, models cannot be resized in the editor once they have been imported. This means that the size needs &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;be correct at export, or else the surrounding brush geometry will need to be resized to match.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* '''Personal &lt;/span&gt;preference&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;'''. Ultimately the decision to use models or in-editor construction is affected by the mapper's own preferences &lt;/span&gt;and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;skills with the various tools. 3D applications can be challenging to learn for new users, but experienced modellers may find the level editors to be limiting and prefer to make use of their existing skillset&lt;/span&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* Is it easier for you &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;construct &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;specific object &lt;/span&gt;with &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;brushes or modelling tools?&lt;/span&gt;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;Another consideration is that models behave differently with regards &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;visibility culling than level geometry. The top part of image on the right shows &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;corridor &lt;/span&gt;with &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[r_showPortals (cvar)|r_showPortals]] 1, [[r_useScissor (cvar)|r_useScissor]] 0 and [[r_showTris (cvar)|r_showTris]] 2. In the red circle area &lt;/span&gt;you can &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;see that the portal is green (i&lt;/span&gt;.&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;e. open) and that &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;engine &lt;/span&gt;is &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;rendering &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;alcove on the right&lt;/span&gt;. &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;However, &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;alcove is empty. If you strafe left &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;bit (the lower part of the image) you can see that two boxes (which are two func_static) show up&lt;/span&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* Do &lt;/span&gt;you &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;need to take advantage of vertex coloring? Brushes &lt;/span&gt;can &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;not make use of vertex color&lt;/span&gt;.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;* Is this object integral to sealing &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;void or &lt;/span&gt;is &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;it just decoration? Models cannot seal a map from &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;void&lt;/span&gt;. &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;Caulk brushes have to be placed behind models that make up &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;border of &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;map&lt;/span&gt;.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;It's also worth noting that you can not resize static meshes in &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;engine's editor: &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;model of a door for &lt;/span&gt;example, &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;can&lt;/span&gt;'&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;t &lt;/span&gt;be &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;resized &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;fit &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;doorframe (had you misjudged &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;sizing) so you&lt;/span&gt;'&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;d need &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;either resize &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;model in your 3D application or change &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;surrounding brushwork to fit&lt;/span&gt;.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;Despite &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;above, this functionality is &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;double-edged sword. Although in the above &lt;/span&gt;example, &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;models will not show up until they&lt;/span&gt;'&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;re nearly visible and thus an advantage, other situations arise where the vis portal is closed but models may still &lt;/span&gt;be &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;&amp;quot;visible&amp;quot; &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;the engine because &lt;/span&gt;a &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;very small part of them are on &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;other side of the portal. Since they are models, they are not cut by the visportal and that&lt;/span&gt;'&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;s why they show in their entirety, because they are being drawn relative &lt;/span&gt;to &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;their bounding box limits (&lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;'box' that contains &lt;/span&gt;the &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;object). This can become a problem with big models that span visportals&lt;/span&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;[[Category:Modelling]][[Category:Mapping]]&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;[[Category:Modelling]][[Category:Mapping]]&lt;/td&gt;&lt;/tr&gt;

			&lt;/table&gt;
		</description>
			<pubDate>Sun, 09 Sep 2007 21:08:17 GMT</pubDate>			<dc:creator>OrbWeaver</dc:creator>			<comments>http://modwiki.net/wiki/Talk:Models_vs_brushes</comments>		</item>
		<item>
			<title>Optimising maps</title>
			<link>http://modwiki.net/wiki/Optimising_maps</link>
			<description>&lt;p&gt;Added wiki links&lt;/p&gt;

			&lt;table border='0' width='98%' cellpadding='0' cellspacing='4' style=&quot;background-color: white;&quot;&gt;
			&lt;tr&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Revision as of 20:48, 9 September 2007&lt;/td&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Current revision&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 19:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 19:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Consider which lights need to cast shadows: ambient or &amp;quot;fill-in&amp;quot; lights almost never need to be shadowcasters. Large, level-encompassing shadowcasting &amp;quot;moonlights&amp;quot; are particularly bad, and should be avoided if at all possible.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Consider which lights need to cast shadows: ambient or &amp;quot;fill-in&amp;quot; lights almost never need to be shadowcasters. Large, level-encompassing shadowcasting &amp;quot;moonlights&amp;quot; are particularly bad, and should be avoided if at all possible.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Turn off shadows for individual models by using setting the &amp;quot;noshadows&amp;quot; key to &amp;quot;1&amp;quot;. Although objects cast shadows by default, in many mapping situations there is no significant visual problem with turning them off.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Turn off shadows for individual models by using setting the &amp;quot;noshadows&amp;quot; key to &amp;quot;1&amp;quot;. Although objects cast shadows by default, in many mapping situations there is no significant visual problem with turning them off.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;# Make liberal use of the '''r_showShadows''' and '''r_showShadowCount''' CVARs during playtesting. '''r_showShadowCount''' colour-codes surfaces in much the same way as '''r_showLightCount''' -- if the screen turns white, there are far too many shadows in view.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;# Make liberal use of the '''&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[&lt;/span&gt;r_showShadows &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;(cvar)|r_showShadows]]&lt;/span&gt;''' and '''&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;[[r_showShadowCount (cvar)|&lt;/span&gt;r_showShadowCount&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;]]&lt;/span&gt;''' CVARs during playtesting. '''r_showShadowCount''' colour-codes surfaces in much the same way as '''r_showLightCount''' -- if the screen turns white, there are far too many shadows in view.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# When designing a complex model, consider setting the model's main texture to non-shadowcasting (with the '''noShadow''' material keyword) and adding a separate, simpler &amp;quot;shadow mesh&amp;quot; to the model textured with &amp;quot;textures/common/shadow&amp;quot; or a similar shadowcasting texture. This means that the geometry used to calculate shadows is much simpler than the rendered visual model, which can improve performance without severely impacting the appearance.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# When designing a complex model, consider setting the model's main texture to non-shadowcasting (with the '''noShadow''' material keyword) and adding a separate, simpler &amp;quot;shadow mesh&amp;quot; to the model textured with &amp;quot;textures/common/shadow&amp;quot; or a similar shadowcasting texture. This means that the geometry used to calculate shadows is much simpler than the rendered visual model, which can improve performance without severely impacting the appearance.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Animated lights or shadowvolumes are much slower than those cast by static models in a static lightsource, since the animated geometry cannot make use of the precomputed shadowvolumes added to the .proc file by the map compiler.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;# Animated lights or shadowvolumes are much slower than those cast by static models in a static lightsource, since the animated geometry cannot make use of the precomputed shadowvolumes added to the .proc file by the map compiler.&lt;/td&gt;&lt;/tr&gt;

			&lt;/table&gt;
		</description>
			<pubDate>Sun, 09 Sep 2007 20:48:35 GMT</pubDate>			<dc:creator>OrbWeaver</dc:creator>			<comments>http://modwiki.net/wiki/Talk:Optimising_maps</comments>		</item>
		<item>
			<title>Modlist</title>
			<link>http://modwiki.net/wiki/Modlist</link>
			<description>&lt;p&gt;Removed &amp;quot;Marines of UAC&amp;quot; since the site is down, full of mispellings, redirects to a nonstandard port and appears to have been added by a spammer&lt;/p&gt;

			&lt;table border='0' width='98%' cellpadding='0' cellspacing='4' style=&quot;background-color: white;&quot;&gt;
			&lt;tr&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Revision as of 20:16, 9 September 2007&lt;/td&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Current revision&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 4:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 4:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;===Total Conversions===&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;===Total Conversions===&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;*[http://www.freewebs.com/sargentbear/ Mouac (Marines of uac)]&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;*[http://recalltohell.d3files.com/ Recall To Hell]&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;*[http://recalltohell.d3files.com/ Recall To Hell]&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;*[http://cdoom.d3files.com/index.php?page=news Classic Doom 3 (finished as 1.1)]&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;*[http://cdoom.d3files.com/index.php?page=news Classic Doom 3 (finished as 1.1)]&lt;/td&gt;&lt;/tr&gt;

			&lt;/table&gt;
		</description>
			<pubDate>Sun, 09 Sep 2007 20:16:18 GMT</pubDate>			<dc:creator>OrbWeaver</dc:creator>			<comments>http://modwiki.net/wiki/Talk:Modlist</comments>		</item>
		<item>
			<title>Optimising maps</title>
			<link>http://modwiki.net/wiki/Optimising_maps</link>
			<description>&lt;p&gt;/* Shadows */&lt;/p&gt;

			&lt;table border='0' width='98%' cellpadding='0' cellspacing='4' style=&quot;background-color: white;&quot;&gt;
			&lt;tr&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Revision as of 20:00, 9 September 2007&lt;/td&gt;
				&lt;td colspan='2' width='50%' align='center' style=&quot;background-color: white;&quot;&gt;Current revision&lt;/td&gt;
			&lt;/tr&gt;
			&lt;tr&gt;&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 6:&lt;/strong&gt;&lt;/td&gt;
&lt;td colspan=&quot;2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Line 6:&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;After you've finished your map and are exclusively optimising the level it may pay off to [[recordDemo (console command)|record]] a .[[DEMO (file format)|DEMO]] of you playing through and then benchmark it with the [[timeDemo (console command)|timeDemo]] function. This way you can more quickly and accurately see which parts need to be optimised.&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;After you've finished your map and are exclusively optimising the level it may pay off to [[recordDemo (console command)|record]] a .[[DEMO (file format)|DEMO]] of you playing through and then benchmark it with the [[timeDemo (console command)|timeDemo]] function. This way you can more quickly and accurately see which parts need to be optimised.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;==Visportals==&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;By far the most important part in optimizing your maps is the correct usage of [[Visportal|visportals]], which tells the engine how to split up your map for rendering. If portals are not used properly, the engine may be rendering vast amounts of geometry which is not visible to the player, with an obviously devastating impact on performance.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;'''Maps must be designed from the start with portalisation in mind; attempting to retrofit portals into an existing map is a recipe for frustration.''' Portalisation works best when a map is constructed in a &amp;quot;tunnel network&amp;quot; fashion, without excessive sightlines or large open areas with high polycounts.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;==Shadows==&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;By default, all brushes, models and patches cast shadows in the Doom 3 engine. For every shadow-casting object the engine must do several things: calculate the silhouette and extrude the shadowvolume (CPU-intensive), render the back of the shadow volume (GPU render pass) then render the front of the shadow volume (GPU render pass). This process must be repeated for every light for which this object casts a shadow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;These extra render passes and shadowvolume calculations have a significantly detrimental effect on performance if sufficiently complex shadows are present in a scene. For this reason, eliminating unnecessary shadows is an important part of making smooth-running maps.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;# Consider which lights need to cast shadows: ambient or &amp;quot;fill-in&amp;quot; lights almost never need to be shadowcasters. Large, level-encompassing shadowcasting &amp;quot;moonlights&amp;quot; are particularly bad, and should be avoided if at all possible.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;# Turn off shadows for individual models by using setting the &amp;quot;noshadows&amp;quot; key to &amp;quot;1&amp;quot;. Although objects cast shadows by default, in many mapping situations there is no significant visual problem with turning them off.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;# Make liberal use of the '''r_showShadows''' and '''r_showShadowCount''' CVARs during playtesting. '''r_showShadowCount''' colour-codes surfaces in much the same way as '''r_showLightCount''' -- if the screen turns white, there are far too many shadows in view.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;# When designing a complex model, consider setting the model's main texture to non-shadowcasting (with the '''noShadow''' material keyword) and adding a separate, simpler &amp;quot;shadow mesh&amp;quot; to the model textured with &amp;quot;textures/common/shadow&amp;quot; or a similar shadowcasting texture. This means that the geometry used to calculate shadows is much simpler than the rendered visual model, which can improve performance without severely impacting the appearance.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;# Animated lights or shadowvolumes are much slower than those cast by static models in a static lightsource, since the animated geometry cannot make use of the precomputed shadowvolumes added to the .proc file by the map compiler.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;==Lighting==&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;==Lighting==&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;The [[r_showLightCount (cvar)|r_showLightCount]] CVar allows you to check how many lights are hitting each polygon. You can even make it a bindable toggle so that you can switch from disabled, to number of lights, to number of lights plus overdraw rate. &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;The [[r_showLightCount (cvar)|r_showLightCount]] CVar allows you to check how many lights are hitting each polygon. You can even make it a bindable toggle so that you can switch from disabled, to number of lights, to number of lights plus overdraw rate. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td style=&quot;background: #ffa; font-size: smaller;&quot;&gt;When viewing with r_showLightCount, surfaces in the game (and the editor) display a colour, representing the number of lights hitting a surface. Red green and dark blue are good, light blue, white and pink are bad. Surfaces which have these &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;bad colours will generally run sluggishly &lt;/span&gt;on &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;your rig. Split &lt;/span&gt;the surfaces up (through manual [[brush carving]] or via the [[lightCarve]] compile option) along the light's volumes &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;until you've got mostly reds, greens and dark blues meaning &lt;/span&gt;that each surface is being hit by as few different light sources as possible.&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;When viewing with r_showLightCount, surfaces in the game (and &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;DoomEdit, although &lt;/span&gt;the editor &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;colours are inaccurate&lt;/span&gt;) display a colour, representing the number of lights hitting a surface. Red green and dark blue are good, light blue, white and pink are bad. Surfaces which have these &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;increased light-counts may cause a performance impact depending &lt;/span&gt;on &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;their screen area, and in some cases it may improve performance to split &lt;/span&gt;the surfaces up (through manual [[brush carving]] or via the [[lightCarve]] compile option) along the light's volumes &lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;so &lt;/span&gt;that each surface is being hit by as few different light sources as possible&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&amp;#160;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;+&lt;/td&gt;&lt;td style=&quot;background: #cfc; font-size: smaller;&quot;&gt;&lt;span style=&quot;color: red; font-weight: bold;&quot;&gt;In general, light counts are not the main impactor of performance and carving brushes is not a labour-efficient way of increasing the framerate; well-designed portalling and reduced shadow counts are far more effective&lt;/span&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;It can also be helpful to set both r_showTris and [[r_showLightScissors (cvar)|r_showLightScissors]] to &amp;quot;1&amp;quot; along with r_showLightCount. You could use the following:&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td style=&quot;background: #eee; font-size: smaller;&quot;&gt;It can also be helpful to set both r_showTris and [[r_showLightScissors (cvar)|r_showLightScissors]] to &amp;quot;1&amp;quot; along wi